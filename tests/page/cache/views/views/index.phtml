<?php $__errorHandler = function($code, $message, $file, $line) {
    
    if (!(error_reporting() & $code))
    return;
    
    throw new \ErrorException($message, 0, $code, $file, $line);
    };
    set_error_handler($__errorHandler);
?>
<?php $__args = isset($__args) ? $__args : [];?>
<?php $__mixins = [];?>
<?php $__mixins['example-button'] = function(array $__arguments) use($__args, $__mixins) {
    static $__defaults = array (
    'label' => NULL,
    'example' => NULL,
    'withErrorHandler' => NULL,
    );
    $__arguments = array_replace($__defaults, $__arguments);
    $__args = array_replace($__args, $__arguments);
    extract($__args); 
    
    
?>

<?php /* Nifty, isn't it? */ ?>
<a class="btn btn-default btn-lg"<?php $__values = [isset($url) ? $url : false, '?example='.$example, $withErrorHandler ? '&withErrorHandler': '', "#liveCompiler"]; if (!\Tale\Jade\Compiler::isArrayNullOrFalse($__values)) echo ' href='.\Tale\Jade\Compiler::buildValue($__values, '"', true); unset($__values);?>>
    <?=htmlentities(isset($label) ? $label : '', \ENT_QUOTES)?>
</a>
<?php };?>

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8"></meta>
        <title>
            Tale Jade Live Compiler
        </title>
        
        <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.5/css/bootstrap.min.css">
        <style>
        body {
        font-family: 'Segoe UI', 'San Francisco', 'Helvetica Neue', Helvetica, Arial, sans-serif;
        font-size: 16px;
        padding-bottom: 100px;
        }
        
        pre {
        display: block;
        border-radius: 0;
        background: #fff;
        border: none;
        width: 100%;
        height: 100%;
        overflow: auto;
        }
        
        #phpEditor, #jadeEditor, .CodeMirror {
        width: 100%;
        height: 100%;
        }
        
        .editor {
        width: 100%;
        height: 600px;
        border: 3px solid lawngreen;
        transition: border-color .2s ease-out;
        border-radius: 2px;
        }
        
        .compiling {
        border-color: darkgreen;
        }
                </style>
    </head>
    <body>
        <div class="container">
            <div class="page-header">
                <h1>
                    Welcome to Tale Jade!
                </h1>
            </div>
            <p class="lead">
                Tale Jade is a PHP Template Engine based on the Node.js Implementation of the Jade Language
            </p>
            <p>
                You can find the original documentation at <a href="http://jade-lang.com" target="_blank">jade-lang.com</a>
            </p>
            <h4>
                Tale Jade is not a port of the Node.js Implementation
            </h4>
            <p>
                While the official implementation works fine for JavaScript, it has its limits in PHP.
                This implementation aims to improve the experience for PHP users using the Jade template engine
            </p>
            <h4>
                Unlimited Jade
            </h4>
            <p>
                Tale Jade removes many limits of the official Node.js implementation. To see how that turned out, watch our examples
            </p>
            <a name="liveCompiler"></a>
            <p class="lead">
                Check out our live compiler:
            </p>
            <div class="container-editor">
                <div class="row">
                    <div class="col col-md-6">
                        <p class="lead">
                            Jade
                        </p>
                        <div class="editor editor-jade">
                            <div id="jadeEditor"></div>
                        </div>
                    </div>
                    <div class="col col-md-6">
                        <p class="lead">
                            PHTML (HTML with PHP Instructions)
                        </p>
                        <div class="editor editor-php">
                            <div id="phpEditor"></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="container-examples">
                <h2>
                    Some more examples
                </h2>
                <?php $__mixinCallArgs = ['label' => 'Mixins', 'example' => 'mixins'];
                    $__mixinCallArgs['__block'] = isset($__block) ? $__block : null;
                    call_user_func($__mixins['example-button'], $__mixinCallArgs);
                    unset($__mixinCallArgs);
                    unset($__block);
                ?>

                <?php $__mixinCallArgs = ['label' => 'Cross Assignment', 'example' => 'assignments'];
                    $__mixinCallArgs['__block'] = isset($__block) ? $__block : null;
                    call_user_func($__mixins['example-button'], $__mixinCallArgs);
                    unset($__mixinCallArgs);
                    unset($__block);
                ?>

                <?php $__mixinCallArgs = ['label' => 'Blocks', 'example' => 'blocks'];
                    $__mixinCallArgs['__block'] = isset($__block) ? $__block : null;
                    call_user_func($__mixins['example-button'], $__mixinCallArgs);
                    unset($__mixinCallArgs);
                    unset($__block);
                ?>

                <?php $__mixinCallArgs = ['label' => 'Block Expansion', 'example' => 'block-expansion'];
                    $__mixinCallArgs['__block'] = isset($__block) ? $__block : null;
                    call_user_func($__mixins['example-button'], $__mixinCallArgs);
                    unset($__mixinCallArgs);
                    unset($__block);
                ?>

                <?php $__mixinCallArgs = ['label' => 'Conditionals', 'example' => 'conditionals'];
                    $__mixinCallArgs['__block'] = isset($__block) ? $__block : null;
                    call_user_func($__mixins['example-button'], $__mixinCallArgs);
                    unset($__mixinCallArgs);
                    unset($__block);
                ?>

                <?php $__mixinCallArgs = ['label' => 'Loops', 'example' => 'loops'];
                    $__mixinCallArgs['__block'] = isset($__block) ? $__block : null;
                    call_user_func($__mixins['example-button'], $__mixinCallArgs);
                    unset($__mixinCallArgs);
                    unset($__block);
                ?>

                <?php $__mixinCallArgs = ['label' => 'Escaping', 'example' => 'escaping'];
                    $__mixinCallArgs['__block'] = isset($__block) ? $__block : null;
                    call_user_func($__mixins['example-button'], $__mixinCallArgs);
                    unset($__mixinCallArgs);
                    unset($__block);
                ?>

                <?php $__mixinCallArgs = ['label' => 'Code', 'example' => 'code'];
                    $__mixinCallArgs['__block'] = isset($__block) ? $__block : null;
                    call_user_func($__mixins['example-button'], $__mixinCallArgs);
                    unset($__mixinCallArgs);
                    unset($__block);
                ?>

                <?php $__mixinCallArgs = ['label' => 'Comments', 'example' => 'comments'];
                    $__mixinCallArgs['__block'] = isset($__block) ? $__block : null;
                    call_user_func($__mixins['example-button'], $__mixinCallArgs);
                    unset($__mixinCallArgs);
                    unset($__block);
                ?>

                <?php $__mixinCallArgs = ['label' => 'Error Handler', 'example' => isset($example) ? $example : null, 'withErrorHandler' => 'true'];
                    $__mixinCallArgs['__block'] = isset($__block) ? $__block : null;
                    call_user_func($__mixins['example-button'], $__mixinCallArgs);
                    unset($__mixinCallArgs);
                    unset($__block);
                ?>

                <?php $__mixinCallArgs = ['label' => 'Doctypes', 'example' => 'doctypes'];
                    $__mixinCallArgs['__block'] = isset($__block) ? $__block : null;
                    call_user_func($__mixins['example-button'], $__mixinCallArgs);
                    unset($__mixinCallArgs);
                    unset($__block);
                ?>

                <?php $__mixinCallArgs = ['label' => 'Interpolation', 'example' => 'interpolation'];
                    $__mixinCallArgs['__block'] = isset($__block) ? $__block : null;
                    call_user_func($__mixins['example-button'], $__mixinCallArgs);
                    unset($__mixinCallArgs);
                    unset($__block);
                ?>

                <?php $__mixinCallArgs = ['label' => 'Imports', 'example' => 'imports'];
                    $__mixinCallArgs['__block'] = isset($__block) ? $__block : null;
                    call_user_func($__mixins['example-button'], $__mixinCallArgs);
                    unset($__mixinCallArgs);
                    unset($__block);
                ?>

                <?php $__mixinCallArgs = ['label' => 'Filters', 'example' => 'filters'];
                    $__mixinCallArgs['__block'] = isset($__block) ? $__block : null;
                    call_user_func($__mixins['example-button'], $__mixinCallArgs);
                    unset($__mixinCallArgs);
                    unset($__block);
                ?>

                <?php $__mixinCallArgs = ['label' => 'Attribute Stacking', 'example' => 'attribute-stacking'];
                    $__mixinCallArgs['__block'] = isset($__block) ? $__block : null;
                    call_user_func($__mixins['example-button'], $__mixinCallArgs);
                    unset($__mixinCallArgs);
                    unset($__block);
                ?>

                <?php $__mixinCallArgs = ['label' => 'Expressions', 'example' => 'expressions'];
                    $__mixinCallArgs['__block'] = isset($__block) ? $__block : null;
                    call_user_func($__mixins['example-button'], $__mixinCallArgs);
                    unset($__mixinCallArgs);
                    unset($__block);
                ?>

                <?php $__mixinCallArgs = ['label' => 'Text', 'example' => 'text'];
                    $__mixinCallArgs['__block'] = isset($__block) ? $__block : null;
                    call_user_func($__mixins['example-button'], $__mixinCallArgs);
                    unset($__mixinCallArgs);
                    unset($__block);
                ?>

                <?php $__mixinCallArgs = ['label' => 'Include Filters', 'example' => 'include-filters'];
                    $__mixinCallArgs['__block'] = isset($__block) ? $__block : null;
                    call_user_func($__mixins['example-button'], $__mixinCallArgs);
                    unset($__mixinCallArgs);
                    unset($__block);
                ?>

                <?php $__mixinCallArgs = ['label' => 'Variadics', 'example' => 'variadics'];
                    $__mixinCallArgs['__block'] = isset($__block) ? $__block : null;
                    call_user_func($__mixins['example-button'], $__mixinCallArgs);
                    unset($__mixinCallArgs);
                    unset($__block);
                ?>

            </div>
        </div>
        <?php switch (isset($action) ? $action : null) {

            case 'about':?>

                
                <h1>
                    About Tale Jade
                </h1>
                <p>
                    Tale Jade is different from most Jade ports to PHP, since it's not based on the original Node.js compiler.
                </p>
                <p>
                    Tale jade was written from scratch, optimized to integrate into PHP
                </p>
                <p>
                    While the Node.js Engine is great for JavaScript, PHP has some language constructs that allow us to gain a richer feature set
                </p>
            <?php break;?>
            <?php case 'more-examples':?>

                
                <h1>
                    More Examples
                </h1>
                <p>
                    More Examples...
                </p>
            <?php break;?>
        <?php }?>
        
        <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.0.0-alpha1/jquery.min.js"></script>
        <script src="//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.5/js/bootstrap.min.js"></script>
        <script src="//cdnjs.cloudflare.com/ajax/libs/ace/1.2.0/ace.min.js"></script>
        <script src="//cdnjs.cloudflare.com/ajax/libs/ace/1.2.0/theme-dreamweaver.js"></script>
        <script>
        $(function() {
        
        ace.config.set("packaged", true);
        ace.config.set("basePath", 'https://cdnjs.cloudflare.com/ajax/libs/ace/1.2.0');
        
        var jadeEditor = ace.edit('jadeEditor');
        var phpEditor = ace.edit('phpEditor');
        
        jadeEditor.setTheme('ace/theme/xcode');
        jadeEditor.getSession().setMode('ace/mode/jade');
        jadeEditor.getSession().setUseWorker(false)
        jadeEditor.getSession().setUseSoftTabs(true);
        jadeEditor.setValue(<?=isset($exampleJade) ? $exampleJade : ''?>);
        jadeEditor.navigateFileStart();
        phpEditor.setTheme('ace/theme/xcode');
        phpEditor.getSession().setMode('ace/mode/php');
        phpEditor.getSession().setUseWorker(false)
        phpEditor.getSession().setUseSoftTabs(true);
        phpEditor.setReadOnly(true);
        
        
        function compile()
        {
        
        document.getElementById('phpEditor').classList.add('compiling');
        
        var eh = <?=isset($handleErrors) ? $handleErrors : ''?> ? '&withErrorHandler' : '';
        var m = <?=isset($minify) ? $minify : ''?> ? '&minify' : '';
        $.post('<?=isset($url) ? $url : ''?>?' + eh + m, {jade: jadeEditor.getValue()}, function(result) {
        
        document.getElementById('phpEditor').classList.remove('compiling');
        phpEditor.setValue(JSON.parse(result));
        phpEditor.navigateFileStart();
        });
        }
        
        var iv;
        function changed()
        {
        
        if (iv) {
        
        window.clearTimeout(iv);
        }
        
        document.getElementById('phpEditor').classList.add('compiling');
        iv = window.setTimeout(compile, 50);
        }
        
        jadeEditor.getSession().on('change', changed);
        compile();
        });
                </script>
    </body>
</html><?php restore_error_handler(); unset($__errorHandler);?>